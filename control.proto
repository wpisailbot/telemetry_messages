syntax = "proto3";
import "boat_state.proto";
package boat_control;

enum ControlExecutionStatus {
    CONTROL_EXECUTION_UNDEFINED = 0;
    CONTROL_EXECUTION_SUCCESS = 1;
    CONTROL_EXECUTION_ERROR = 2;
}

message ControlResponse {
    ControlExecutionStatus execution_status = 1;
}

message RudderCommand {
    float rudder_control_value = 1;
}

message TrimTabCommand {
    float trimtab_control_value = 1;
}

message BallastCommand {
    float ballast_control_value = 1;
}

message AutonomousModeCommand {
    boat_state.AutonomousMode autonomous_mode = 5;
}

message SetWaypointsCommand {
    boat_state.WaypointPath new_waypoints = 1;
}

message AddWaypointCommand {
    boat_state.Waypoint new_waypoint = 1;
}

message MarkBuoyCommand {
    boat_state.Point position = 1;
}

message SetVFForwardMagnitudeCommand {
    float magnitude = 1;
}

message SetRudderKPCommand {
    float kp = 1;
} 

message SetRudderKDCommand {
    float kd = 1;
} 

message SetCVParametersCommand {
    boat_state.CVParameters parameters = 1;
}

service ExecuteRudderCommandService {
    rpc ExecuteRudderCommand (RudderCommand) returns (ControlResponse);
}

service ExecuteTrimTabCommandService {
    rpc ExecuteTrimTabCommand (TrimTabCommand) returns (ControlResponse);
}

service ExecuteBallastCommandService {
    rpc ExecuteBallastCommand (BallastCommand) returns (ControlResponse);
}

service ExecuteAutonomousModeCommandService {
    rpc ExecuteAutonomousModeCommand (AutonomousModeCommand) returns (ControlResponse);
}

service ExecuteSetWaypointsCommandService {
    rpc ExecuteSetWaypointsCommand (SetWaypointsCommand) returns (ControlResponse);
}

service ExecuteAddWaypointCommandService {
    rpc ExecuteAddWaypointCommand (AddWaypointCommand) returns (ControlResponse);
}

service ExecuteMarkBuoyCommandService {
    rpc ExecuteMarkBuoyCommand (MarkBuoyCommand) returns (ControlResponse);
}

service ExecuteSetVFForwardMagnitudeCommandService {
    rpc ExecuteSetVFForwardMagnitudeCommand (SetVFForwardMagnitudeCommand) returns (ControlResponse);
}

service ExecuteSetRudderKPCommandService {
    rpc ExecuteSetRudderKPCommand (SetRudderKPCommand) returns (ControlResponse);
}

service ExecuteSetRudderKDCommandService {
    rpc ExecuteSetRudderKDCommand (SetRudderKDCommand) returns (ControlResponse);
}

service ExecuteSetCVParametersCommandService {
    rpc ExecuteSetCVParametersCommand (SetCVParametersCommand) returns (ControlResponse);
}