# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import control_pb2 as control__pb2

GRPC_GENERATED_VERSION = '1.63.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in control_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class ControlCommandServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExecuteRudderCommand = channel.unary_unary(
                '/boat_control.ControlCommandService/ExecuteRudderCommand',
                request_serializer=control__pb2.RudderCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteTrimTabCommand = channel.unary_unary(
                '/boat_control.ControlCommandService/ExecuteTrimTabCommand',
                request_serializer=control__pb2.TrimTabCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteBallastCommand = channel.unary_unary(
                '/boat_control.ControlCommandService/ExecuteBallastCommand',
                request_serializer=control__pb2.BallastCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteAutonomousModeCommand = channel.unary_unary(
                '/boat_control.ControlCommandService/ExecuteAutonomousModeCommand',
                request_serializer=control__pb2.AutonomousModeCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteSetWaypointsCommand = channel.unary_unary(
                '/boat_control.ControlCommandService/ExecuteSetWaypointsCommand',
                request_serializer=control__pb2.SetWaypointsCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteAddWaypointCommand = channel.unary_unary(
                '/boat_control.ControlCommandService/ExecuteAddWaypointCommand',
                request_serializer=control__pb2.AddWaypointCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteMarkBuoyCommand = channel.unary_unary(
                '/boat_control.ControlCommandService/ExecuteMarkBuoyCommand',
                request_serializer=control__pb2.MarkBuoyCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)


class ControlCommandServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ExecuteRudderCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteTrimTabCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteBallastCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteAutonomousModeCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteSetWaypointsCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteAddWaypointCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteMarkBuoyCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ControlCommandServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ExecuteRudderCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteRudderCommand,
                    request_deserializer=control__pb2.RudderCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteTrimTabCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteTrimTabCommand,
                    request_deserializer=control__pb2.TrimTabCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteBallastCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteBallastCommand,
                    request_deserializer=control__pb2.BallastCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteAutonomousModeCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteAutonomousModeCommand,
                    request_deserializer=control__pb2.AutonomousModeCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteSetWaypointsCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteSetWaypointsCommand,
                    request_deserializer=control__pb2.SetWaypointsCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteAddWaypointCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteAddWaypointCommand,
                    request_deserializer=control__pb2.AddWaypointCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteMarkBuoyCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteMarkBuoyCommand,
                    request_deserializer=control__pb2.MarkBuoyCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'boat_control.ControlCommandService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ControlCommandService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ExecuteRudderCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.ControlCommandService/ExecuteRudderCommand',
            control__pb2.RudderCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteTrimTabCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.ControlCommandService/ExecuteTrimTabCommand',
            control__pb2.TrimTabCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteBallastCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.ControlCommandService/ExecuteBallastCommand',
            control__pb2.BallastCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteAutonomousModeCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.ControlCommandService/ExecuteAutonomousModeCommand',
            control__pb2.AutonomousModeCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteSetWaypointsCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.ControlCommandService/ExecuteSetWaypointsCommand',
            control__pb2.SetWaypointsCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteAddWaypointCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.ControlCommandService/ExecuteAddWaypointCommand',
            control__pb2.AddWaypointCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteMarkBuoyCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.ControlCommandService/ExecuteMarkBuoyCommand',
            control__pb2.MarkBuoyCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class SetParameterServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExecuteSetVFForwardMagnitudeCommand = channel.unary_unary(
                '/boat_control.SetParameterService/ExecuteSetVFForwardMagnitudeCommand',
                request_serializer=control__pb2.SetVFForwardMagnitudeCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteSetRudderAdjustmentScaleCommand = channel.unary_unary(
                '/boat_control.SetParameterService/ExecuteSetRudderAdjustmentScaleCommand',
                request_serializer=control__pb2.SetRudderAdjustmentScaleCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteSetRudderOvershootBiasCommand = channel.unary_unary(
                '/boat_control.SetParameterService/ExecuteSetRudderOvershootBiasCommand',
                request_serializer=control__pb2.SetRudderOvershootBiasCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)
        self.ExecuteSetCVParametersCommand = channel.unary_unary(
                '/boat_control.SetParameterService/ExecuteSetCVParametersCommand',
                request_serializer=control__pb2.SetCVParametersCommand.SerializeToString,
                response_deserializer=control__pb2.ControlResponse.FromString,
                _registered_method=True)


class SetParameterServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ExecuteSetVFForwardMagnitudeCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteSetRudderAdjustmentScaleCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteSetRudderOvershootBiasCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteSetCVParametersCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SetParameterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ExecuteSetVFForwardMagnitudeCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteSetVFForwardMagnitudeCommand,
                    request_deserializer=control__pb2.SetVFForwardMagnitudeCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteSetRudderAdjustmentScaleCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteSetRudderAdjustmentScaleCommand,
                    request_deserializer=control__pb2.SetRudderAdjustmentScaleCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteSetRudderOvershootBiasCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteSetRudderOvershootBiasCommand,
                    request_deserializer=control__pb2.SetRudderOvershootBiasCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
            'ExecuteSetCVParametersCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteSetCVParametersCommand,
                    request_deserializer=control__pb2.SetCVParametersCommand.FromString,
                    response_serializer=control__pb2.ControlResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'boat_control.SetParameterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SetParameterService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ExecuteSetVFForwardMagnitudeCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.SetParameterService/ExecuteSetVFForwardMagnitudeCommand',
            control__pb2.SetVFForwardMagnitudeCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteSetRudderAdjustmentScaleCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.SetParameterService/ExecuteSetRudderAdjustmentScaleCommand',
            control__pb2.SetRudderAdjustmentScaleCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteSetRudderOvershootBiasCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.SetParameterService/ExecuteSetRudderOvershootBiasCommand',
            control__pb2.SetRudderOvershootBiasCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteSetCVParametersCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/boat_control.SetParameterService/ExecuteSetCVParametersCommand',
            control__pb2.SetCVParametersCommand.SerializeToString,
            control__pb2.ControlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
