# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import boat_state_pb2 as boat__state__pb2


class SendBoatStateServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendBoatState = channel.unary_unary(
        '/boat_state.SendBoatStateService/SendBoatState',
        request_serializer=boat__state__pb2.BoatStateRequest.SerializeToString,
        response_deserializer=boat__state__pb2.BoatState.FromString,
        )


class SendBoatStateServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendBoatState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SendBoatStateServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendBoatState': grpc.unary_unary_rpc_method_handler(
          servicer.SendBoatState,
          request_deserializer=boat__state__pb2.BoatStateRequest.FromString,
          response_serializer=boat__state__pb2.BoatState.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'boat_state.SendBoatStateService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class StreamBoatStateServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StreamBoatState = channel.unary_stream(
        '/boat_state.StreamBoatStateService/StreamBoatState',
        request_serializer=boat__state__pb2.BoatStateRequest.SerializeToString,
        response_deserializer=boat__state__pb2.BoatState.FromString,
        )


class StreamBoatStateServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StreamBoatState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StreamBoatStateServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StreamBoatState': grpc.unary_stream_rpc_method_handler(
          servicer.StreamBoatState,
          request_deserializer=boat__state__pb2.BoatStateRequest.FromString,
          response_serializer=boat__state__pb2.BoatState.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'boat_state.StreamBoatStateService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class GetMapServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetMap = channel.unary_unary(
        '/boat_state.GetMapService/GetMap',
        request_serializer=boat__state__pb2.MapRequest.SerializeToString,
        response_deserializer=boat__state__pb2.MapResponse.FromString,
        )


class GetMapServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetMap(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GetMapServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetMap': grpc.unary_unary_rpc_method_handler(
          servicer.GetMap,
          request_deserializer=boat__state__pb2.MapRequest.FromString,
          response_serializer=boat__state__pb2.MapResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'boat_state.GetMapService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
